Implement next permutation, 
which rearranges numbers into the lexicographically next greater permutation of numbers.

If such an arrangement is not possible, 
it must rearrange it as the lowest possible order (i.e., sorted in ascending order).

The replacement must be in place and use only constant extra memory.

Example 1:

Input: nums = [1,2,3]
Output: [1,3,2]
Example 2:

Input: nums = [3,2,1]
Output: [1,2,3]
Example 3:

Input: nums = [1,1,5]
Output: [1,5,1]
Example 4:

Input: nums = [1]
Output: [1]
 

Constraints:

1 <= nums.length <= 100
0 <= nums[i] <= 100


Logic for finding permutations:
1. find the number which is decreasing from right. let it be c
2. fing the number which is imediate greater than c and lowest in numbers begining next from c and till end
3. replace number found in step 2 with c
4. sort the numbers next from c till end.

this will give you next permutation. For finding all possible permutations, perform the above process till all the numbers are reverse sorted.
