Backtracking
backtracking is a general algorithm for finding all (or some) solutions to some computational problems.
The idea is that it incrementally builds candidates to the solutions, 
and abandons a candidate ("backtrack") 
as soon as it determines that this candidate cannot lead to a final solution.

use recursion to solve this and to understand recursion use tree on paper 
it will be easy to iterate over each case

1. how to rorate n x n matrix
	a. make each row as column for that swap row 0 element with colum 0
	b. swap elements of col start with col end. start++ and end-- for each row

2. sodoku question how to get which box each cell matrix belongs to
	(row)/3 * 3 + (col/3)

3. how to find out missing ele in array
	a. go to array position which is pointed by each array ele and multiply it by -1
	b. array index whose ele is not multiple of -1 is missing

4. how to find out which ele is duplicated
	a. go to array position which is pointed by each array ele and multiply it by -1
	b. if you go to array position pointed by array ele and get value negative, that array ele 
	   is duplicated

5. in order to covert char into int with its index between 0 to 26, make char - 'a'.
this will give index of letter in acc to alphabetical order

6. bit wise operations
	1. right shift by 1 bit = in decimal current value get divided by 2
			  n bit = in decimal current value gets divided by 2^n 
	
	Right shift by n operation means, shifting all 1 in binary number to its right by n positions.
	In binary form, each i position's weight is denoted as (2^i) hence when we shift to right by n,
	weight gets reduced by (2^n). Hence we divide number by (2^n) in decimal 
	
	2. left shift by 1 bit = in decimal current value get multiplied by 2
			 n bit = in decimal current value gets multiplied by 2^n

	Left shift by n operation means, shifting all 1 in binary number to its left by n positions
	In binary form, each i position's weight is denoted as (2^i) hence when we shift to left by n, 
	weight gets increased by (2^n). Hence we multiple number by (2^n) in decimal